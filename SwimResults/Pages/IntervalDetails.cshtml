@page
@model SwimResults.Pages.IntervalDetailsModel
@using Constants;
@using Microsoft.AspNetCore.Http.Extensions
@{
    ViewData["Title"] = "Interval Details";
}


<div>
    @{ if (Model.Interval.IntervalNo > 0)
        {
            <h3>Interval @Model.Interval.IntervalNo of workout &laquo;@Model.Interval.WorkoutName&raquo;</h3>
        }
        else
        {
            <h3>Interval Details</h3>
        }
    }
    <hr />
    <div class="row">
        <div class="col">
            <dl class="row">
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Interval.StartTime)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Interval.StartTime)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Interval.EndTime)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Interval.EndTime)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Interval.Duration)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Interval.DurationFormatted)
                </dd>
            </dl>
        </div>
        <div class="col">
            <dl class="row">
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Interval.PaceFormatted)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Interval.PaceFormatted) / 100m
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Interval.WorkoutIntervalType)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Interval.WorkoutIntervalType.Name)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Interval.Notes)
                </dt>
                <dd class="col-sm-9">
                    @*@Html.Raw("<pre>" + Model.Workout.Note + "</pre>")*@
                    <span style="white-space: pre-line">@Html.DisplayFor(model => model.Interval.Notes)</span>
                </dd>
            </dl>
        </div>
    </div>

    <h4 class="text-info">Lengths</h4>
    <table class="table table-hover table-bordered">
        <thead class="thead-light">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Interval.Lengths[0].LengthNo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Interval.Lengths[0].Distance)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Interval.Lengths[0].Duration)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Interval.Lengths[0].StrokeTypeId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Interval.Lengths[0].StrokeCount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Interval.Lengths[0].PaceFormatted)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Interval.Lengths)
            {
            <tr>
                <td>
                    @Html.DisplayFor(model => item.LengthNo)
                </td>
                <td>
                    @Html.DisplayFor(model => item.Distance) m
                </td>
                <td>
                    @Html.DisplayFor(model => item.DurationFormatted)
                </td>
                <td>
                    @Html.DisplayFor(model => item.StrokeTypeName)
                </td>
                <td>
                    @Html.DisplayFor(model => item.StrokeCount)
                </td>
                <td>
                    @Html.DisplayFor(model => item.PaceFormatted) / 100m
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>
<div>
    @{ var routeValues = new Dictionary<string, string> { { "id", Model.Interval.Id.ToString() }, { "returnPath", Request.GetEncodedPathAndQuery() } }; }
    <a asp-page="./EditInterval" title="Edit interval" asp-all-route-data="routeValues"><i class='far fa-edit'></i></a> |
    <a href="@Model.ReturnPath" title="Back"><i class='far fa-arrow-alt-circle-left'></i></a>
</div>
