@page
@model SwimResults.Pages.IntervalDetailsModel
@using Microsoft.AspNetCore.Http.Extensions
@{
    ViewData["Title"] = "Interval Details";
}

<h1>Interval Details</h1>

<div>
    <h4>Interval @Model.IntervalNo</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Interval.StartTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Interval.StartTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Interval.EndTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Interval.EndTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Interval.Duration)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Interval.DurationFormatted)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Interval.PaceFormatted)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Interval.PaceFormatted) / 100m
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Interval.WorkoutIntervalType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Interval.WorkoutIntervalType.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Interval.Notes)
        </dt>
        <dd class="col-sm-10">
            @*@Html.Raw("<pre>" + Model.Workout.Note + "</pre>")*@
            <span style="white-space: pre-line">@Html.DisplayFor(model => model.Interval.Notes)</span>
        </dd>
    </dl>
    <hr />
    <h4>Lengths</h4>
    <table class="table table-hover table-bordered">
        <caption>List of lengths</caption>
        <thead class="thead-light">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Interval.Lengths[0].Distance)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Interval.Lengths[0].Duration)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Interval.Lengths[0].StrokeTypeId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Interval.Lengths[0].StrokeCount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Interval.Lengths[0].PaceFormatted)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Interval.Lengths)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(model => item.Distance) m
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.DurationFormatted)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.StrokeTypeName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.StrokeCount)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.PaceFormatted) / 100m
                    </td>
                    <td>
                        @*<a asp-page="./IntervalDetails" asp-route-id="@item.Id">View</a>*@
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div>
    @{ var routeValues = new Dictionary<string, string> { { "id", Model.Interval.Id.ToString() }, { "intervalNo", Model.IntervalNo.ToString() }, { "returnPath", Request.GetEncodedPathAndQuery() } }; }
    <a asp-page="./EditInterval" asp-all-route-data="routeValues">Edit</a> |
    <a asp-page="./Details" asp-route-id="@Model.Interval.WorkoutId">Back to Workout</a>
</div>